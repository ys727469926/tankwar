---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yangsen.
--- DateTime: 2018/8/8 11:41
---

local HERO = 0x01          --0001
local HERO_BULLET = 0x02   --0010
local ENEMY = 0x04         --0100
local ENEMY_BULLET = 0x08  --1000

local SCORE_LABEL = 100



local common = require("common")
local Tank = require("sprite.Tank")
local HeroTank = require("sprite.HeroTank")
local EnemyTank = require("sprite.EnemyTank")
local size = cc.Director:getInstance():getWinSize()

local playGroundLayer = class("playGroundLayer", function()
    return cc.Layer:create()
end)

function playGroundLayer:ctor()
    cclog("play ground layer init sprite")
    self.score = 0

    local heroTank = HeroTank:create()
    heroTank:setPosition(cc.p(size.width / 2, size.height / 2))
    self:addChild(heroTank, 0, HERO)

    local scoreLabel = cc.Label:createWithSystemFont("SCORE: 0", "Arial", 56)
    scoreLabel:setAnchorPoint(0, 1)
    scoreLabel:setPosition(cc.p(30, size.height - 30))
    self:addChild(scoreLabel, 0, SCORE_LABEL)

    local edgeNode = cc.Node:create()
    edgeNode:setPosition(size.width / 2, size.height / 2)
    edgeNode:setPhysicsBody(
            cc.PhysicsBody:createEdgeBox(cc.size(size.height, size.height),
                    cc.PhysicsMaterial(0.1, 1.0, 0.0)
            ))
    self:addChild(edgeNode)

    local putNewEnemy = function()
        local random = common.getRandNum(1, 3)
        for i = 1, random do
            local enemy = EnemyTank:create()
            enemy:setPosition(cc.p(
                    common.getRandNum(30 + (size.width - size.height) / 2, size.width - 30 - (size.width - size.height) / 2),
                    common.getRandNum(30, size.height - 30)
            ))
            self:addChild(enemy, 0, ENEMY)
            --enemy:randomMove()
        end
    end
    local Timer = cc.Director:getInstance():getScheduler():scheduleScriptFunc(putNewEnemy, 4, false)

    --layer:scheduleOnce(schedule_selsector(missionScene:toPlayScene()),5.0)



    local function onNodeEvent(tag)
        if tag == "enter" then
            self:onEnter()
        elseif tag == "exit" then
            cc.Director:getInstance():getScheduler():unscheduleScriptEntry(Timer)
        end
    end

    self:registerScriptHandler(onNodeEvent)


end

function playGroundLayer:operateByTag(tag)
    if tag ~= 5 then
        self:getChildByTag(HERO):tankMove(tag)
    else
        --cclog("test fire")
        if self:getChildByTag(HERO):tankFire() then
            local function fireCalmDown()
                self:getChildByTag(HERO):setFireCalmDown()
                --cclog("already calm down")
            end
            performWithDelay(self, fireCalmDown, 0.5)
        end
    end

end

--使英雄停止移动
function playGroundLayer:heroStopMove()
    self:getChildByTag(HERO):tankStopMove()
end

--获得英雄方向
function playGroundLayer:getHeroDirection()
    return self:getChildByTag(HERO):getCurrentDirection()
end

function playGroundLayer:onEnter()

    --设置分数
    local function setScore()
        self.score = self.score + 100
        self:getChildByTag(SCORE_LABEL):setString(string.format("SCORE: %d", self.score))
    end

    --初始化碰撞检测
    local function onContactBegin(contact)
        --cclog("in contact")
        local spriteA = contact:getShapeA():getBody():getNode()
        local spriteB = contact:getShapeB():getBody():getNode()
        --print(spriteA:getTag() .. '    ' .. spriteB:getTag())
        if ((spriteA:getTag() == HERO_BULLET) and (spriteB:getTag() == ENEMY)) then
            spriteA:removeFromParent(true)
            spriteB:tankBoom()
            setScore()
        elseif ((spriteA:getTag() == ENEMY) and (spriteB:getTag() == HERO_BULLET)) then
            spriteA:tankBoom()
            spriteB:removeFromParent(true)
            setScore()
        end
    end

    local listener = cc.EventListenerPhysicsContact:create()
    listener:registerScriptHandler(onContactBegin, cc.Handler.EVENT_PHYSICS_CONTACT_BEGIN)

    local evetDispatch = cc.Director:getInstance():getEventDispatcher()
    evetDispatch:addEventListenerWithSceneGraphPriority(listener, self)

end

return playGroundLayer