---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yangsen.
--- DateTime: 2018/8/8 11:42
---

local size = cc.Director:getInstance():getWinSize()

local playPadLayer = class("playGroundLayer", function()
    return cc.Layer:create()
end)

function playPadLayer:create()
    cclog("gamepad layer init")
    local layer = playPadLayer:new()

    local spriteFrame = cc.SpriteFrameCache:getInstance()
    spriteFrame:addSpriteFrames("arrow_50.plist")

    --添加上下左右按钮事件处理

    --右按键按下移动松开
    local function rightButtonTouchBegan(touch, event)
        local target = event:getCurrentTarget()

        cclog("right button touch")
        local locationInNode = target:convertToNodeSpace(touch:getLocation())
        local targetSize = target:getContentSize()
        local rect = cc.rect(0, 0, targetSize.width, targetSize.height)
        if cc.rectContainsPoint(rect, locationInNode) then
            target:setOpacity(180)
            tankRun(tank)
            return true
        end
        return false
    end

    local function rightButtonTouchMoved(touch, event)
        local target = event:getCurrentTarget()
        cclog("right button moved")

        local locationInNode = target:convertToNodeSpace(touch:getLocation())
        local targetSize = target:getContentSize()
        local rect = cc.rect(0, 0, targetSize.width, targetSize.height)

        if cc.rectContainsPoint(rect, locationInNode) then
            target:setOpacity(180)
            tankRun(tank)
            cclog("in right botton")
        else
            target:setOpacity(255)
            tankStopRun(tank)
        end
    end

    local function rightButtonTouchEnded(touch, event)
        local target = event:getCurrentTarget()
        target:setOpacity(255)
        tankStopRun(tank)
    end

    --左按键按下移动松开
    local function leftButtonTouchBegan(touch, event)
        local target = event:getCurrentTarget()

        cclog("left button touch")
        local locationInNode = target:convertToNodeSpace(touch:getLocation())
        local targetSize = target:getContentSize()
        local rect = cc.rect(0, 0, targetSize.width, targetSize.height)
        if cc.rectContainsPoint(rect, locationInNode) then
            target:setOpacity(180)
            tankRun(tank)
            return true
        end
        return false
    end

    local function leftButtonTouchMoved(touch, event)
        local target = event:getCurrentTarget()
        cclog("left button moved")

        local locationInNode = target:convertToNodeSpace(touch:getLocation())
        local targetSize = target:getContentSize()
        local rect = cc.rect(0, 0, targetSize.width, targetSize.height)

        if cc.rectContainsPoint(rect, locationInNode) then
            target:setOpacity(180)
            tankRun(tank)
            cclog("in left botton")
        else
            target:setOpacity(255)
            tankStopRun(tank)
        end
    end

    local function leftButtonTouchEnded(touch, event)
        local target = event:getCurrentTarget()
        target:setOpacity(255)
        tankStopRun(tank)
    end

    --左按键按下移动松开
    local function upButtonTouchBegan(touch, event)
        local target = event:getCurrentTarget()

        cclog("up button touch")
        local locationInNode = target:convertToNodeSpace(touch:getLocation())
        local targetSize = target:getContentSize()
        local rect = cc.rect(0, 0, targetSize.width, targetSize.height)
        if cc.rectContainsPoint(rect, locationInNode) then
            target:setOpacity(180)
            tankRun(tank)
            return true
        end
        return false
    end

    local function upButtonTouchMoved(touch, event)
        local target = event:getCurrentTarget()
        cclog("up button moved")

        local locationInNode = target:convertToNodeSpace(touch:getLocation())
        local targetSize = target:getContentSize()
        local rect = cc.rect(0, 0, targetSize.width, targetSize.height)

        if cc.rectContainsPoint(rect, locationInNode) then
            target:setOpacity(180)
            tankRun(tank)
            cclog("in left botton")
        else
            target:setOpacity(255)
            tankStopRun(tank)
        end
    end

    local function upButtonTouchEnded(touch, event)
        local target = event:getCurrentTarget()
        target:setOpacity(255)
        tankStopRun(tank)
    end

    --左按键按下移动松开
    local function downButtonTouchBegan(touch, event)
        local target = event:getCurrentTarget()

        cclog("down button touch")
        local locationInNode = target:convertToNodeSpace(touch:getLocation())
        local targetSize = target:getContentSize()
        local rect = cc.rect(0, 0, targetSize.width, targetSize.height)
        if cc.rectContainsPoint(rect, locationInNode) then
            target:setOpacity(180)
            tankRun(tank)
            return true
        end
        return false
    end

    local function downButtonTouchMoved(touch, event)
        local target = event:getCurrentTarget()
        cclog("down button moved")

        local locationInNode = target:convertToNodeSpace(touch:getLocation())
        local targetSize = target:getContentSize()
        local rect = cc.rect(0, 0, targetSize.width, targetSize.height)

        if cc.rectContainsPoint(rect, locationInNode) then
            target:setOpacity(180)
            tankRun(tank)
            cclog("in down botton")
        else
            target:setOpacity(255)
            tankStopRun(tank)
        end
    end

    local function downButtonTouchEnded(touch, event)
        local target = event:getCurrentTarget()
        target:setOpacity(255)
        tankStopRun(tank)
    end



    --增加上下左右四个键以及中心区域
    --local centerSprite = cc.Sprite:createWithSpriteFrameName("arrow_middle_50.png")
    --centerSprite:setAnchorPoint(0,0)
    --centerSprite:setPosition(cc.p(55,162))
    --layer:addChild(centerSprite)

    local buttonRight = cc.Sprite:createWithSpriteFrameName("arrow_right_50.png")
    buttonRight:setAnchorPoint(cc.p(0, 0))
    buttonRight:setPosition(cc.p(107, 162))
    layer:addChild(buttonRight)

    local buttonLeft = cc.Sprite:createWithSpriteFrameName("arrow_left_50.png")
    buttonLeft:setAnchorPoint(cc.p(0, 0))
    buttonLeft:setPosition(cc.p(3, 162))
    layer:addChild(buttonLeft)

    local buttonUp = cc.Sprite:createWithSpriteFrameName("arrow_up_50.png")
    buttonUp:setAnchorPoint(cc.p(0, 0))
    buttonUp:setPosition(cc.p(55, 214))
    layer:addChild(buttonUp)

    local buttonDown = cc.Sprite:createWithSpriteFrameName("arrow_down_50.png")
    buttonDown:setAnchorPoint(cc.p(0, 0))
    buttonDown:setPosition(cc.p(55, 110))
    layer:addChild(buttonDown)

    --绑定触摸事件
    local listenerRight = cc.EventListenerTouchOneByOne:create()
    listenerRight:registerScriptHandler(rightButtonTouchBegan, cc.Handler.EVENT_TOUCH_BEGAN)
    listenerRight:registerScriptHandler(rightButtonTouchMoved, cc.Handler.EVENT_TOUCH_MOVED)
    listenerRight:registerScriptHandler(rightButtonTouchEnded, cc.Handler.EVENT_TOUCH_ENDED)

    local listenerLeft = cc.EventListenerTouchOneByOne:create()
    listenerLeft:registerScriptHandler(leftButtonTouchBegan, cc.Handler.EVENT_TOUCH_BEGAN)
    listenerLeft:registerScriptHandler(leftButtonTouchMoved, cc.Handler.EVENT_TOUCH_MOVED)
    listenerLeft:registerScriptHandler(leftButtonTouchEnded, cc.Handler.EVENT_TOUCH_ENDED)

    local listenerUp = cc.EventListenerTouchOneByOne:create()
    listenerUp:registerScriptHandler(upButtonTouchBegan, cc.Handler.EVENT_TOUCH_BEGAN)
    listenerUp:registerScriptHandler(upButtonTouchMoved, cc.Handler.EVENT_TOUCH_MOVED)
    listenerUp:registerScriptHandler(upButtonTouchEnded, cc.Handler.EVENT_TOUCH_ENDED)

    local listenerDown = cc.EventListenerTouchOneByOne:create()
    listenerDown:registerScriptHandler(downButtonTouchBegan, cc.Handler.EVENT_TOUCH_BEGAN)
    listenerDown:registerScriptHandler(downButtonTouchMoved, cc.Handler.EVENT_TOUCH_MOVED)
    listenerDown:registerScriptHandler(downButtonTouchEnded, cc.Handler.EVENT_TOUCH_ENDED)


    --添加事件分发器
    local evetDispatch = cc.Director:getInstance():getEventDispatcher()
    evetDispatch:addEventListenerWithSceneGraphPriority(listenerRight, buttonRight)
    evetDispatch:addEventListenerWithSceneGraphPriority(listenerLeft, buttonLeft)
    evetDispatch:addEventListenerWithSceneGraphPriority(listenerDown, buttonDown)
    evetDispatch:addEventListenerWithSceneGraphPriority(listenerUp, buttonUp)

    return layer
end

return playPadLayer