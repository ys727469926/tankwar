---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yangsen.
--- DateTime: 2018/8/8 18:46
---

local Tank = class("Tank", function(tankName)
    return cc.Sprite:create()
end)

function Tank:create(tankName)
    local sprite = Tank.new(tankName)
    return sprite
end

function Tank:ctor(tankName)
    cclog("tank init")
    --标记当前方向
    self.up = 1
    self.right = 0
    self.down = 0
    self.left = 0
    self.isMoving = false

    local spriteFrame = cc.SpriteFrameCache:getInstance()
    spriteFrame:addSpriteFrames("tank.plist")
    self:setSpriteFrame(tankName)
end

-- 获取当前方向
function Tank:getCurrentDirection()
    if self.up == 1 then
        return "up"
    elseif self.right == 1 then
        return "right"
    elseif self.down == 1 then
        return "down"
    elseif self.left == 1 then
        return "left"
    end
end

-- 设置当前方向
function Tank:setCurrentDirection(direction)
    local currentDirection = self:getCurrentDirection()

    if direction == "up" then
        self.up = 1
    elseif direction == "right" then
        self.right = 1
    elseif direction == "down" then
        self.down = 1
    elseif direction == "left" then
        self.left = 1
    end

    if currentDirection == "up" then
        self.up = 0
    elseif currentDirection == "right" then
        self.right = 0
    elseif currentDirection == "down" then
        self.down = 0
    elseif currentDirection == "left" then
        self.left = 0
    end


end




--坦克移动函数
function Tank:tankMove(tag)
    cclog("tank Move")
    local tankX, tankY = self:getPosition()

    local tankMoveToCurrentDirection = function(direction)
        local moveTo
        if direction == "up" then
            moveTo = cc.MoveTo:create(0.01 * (610 - tankY), cc.p(tankX, 610))
        elseif direction == "right" then
            moveTo = cc.MoveTo:create(0.01 * (770 - tankX), cc.p(770, tankY))
        elseif direction == "down" then
            moveTo = cc.MoveTo:create(0.01 * (tankY - 30), cc.p(tankX, 30))
        elseif direction == "left" then
            moveTo = cc.MoveTo:create(0.01 * (tankX - 190), cc.p(190, tankY))
        end
        self:runAction(moveTo)
        self.isMoving = true
    end

    local direction = self:getCurrentDirection()
    if tag == direction then
        if not self.isMoving then
            tankMoveToCurrentDirection(tag)
        end
    else
        local rotate
        if tag == "up" then
            if direction == "left" then
                rotate = cc.RotateBy:create(0, 90)
            elseif direction == "down" then
                rotate = cc.RotateBy:create(0, 180)
            elseif direction == "right" then
                rotate = cc.RotateBy:create(0, 270)
            end
            self:runAction(rotate)
            self:setCurrentDirection("up")

        elseif tag == "right" then
            if direction == "up" then
                rotate = cc.RotateBy:create(0, 90)
            elseif direction == "left" then
                rotate = cc.RotateBy:create(0, 180)
            elseif direction == "down" then
                rotate = cc.RotateBy:create(0, 270)
            end
            self:runAction(rotate)
            self:setCurrentDirection("right")

        elseif tag == "down" then
            if direction == "right" then
                rotate = cc.RotateBy:create(0, 90)
            elseif direction == "up" then
                rotate = cc.RotateBy:create(0, 180)
            elseif direction == "left" then
                rotate = cc.RotateBy:create(0, 270)
            end
            self:runAction(rotate)
            self:setCurrentDirection("down")
        elseif tag == "left" then
            if direction == "down" then
                rotate = cc.RotateBy:create(0, 90)
            elseif direction == "right" then
                rotate = cc.RotateBy:create(0, 180)
            elseif direction == "up" then
                rotate = cc.RotateBy:create(0, 270)
            end
            self:runAction(rotate)
            self:setCurrentDirection("left")
        end

        tankMoveToCurrentDirection(tag)
    end


end

--坦克停止函数
function Tank:tankStopMove()
    self:stopAllActions()
    self.isMoving = false
end

return Tank