---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yangsen.
--- DateTime: 2018/8/8 18:46
---

--CategoryBitmask
local HERO = 1                  --0001
local HERO_BULLET = 2           --0010
local ENEMY = 4                 --0100
local ENEMY_BULLET = 8          --1000

--ContactBitmask
local HERO_CONTACT = 12         --1100
local HERO_BULLET_CONTACT = 4   --0100
local ENEMY_CONTACT = 3         --0011
local ENEMY_BULLET_CONTACT = 1  --0001

local common = require("common")
local Bullet = require("sprite.Bullet")
local size = cc.Director:getInstance():getWinSize()

local Tank = class("Tank", function(bitmask)
    return cc.Sprite:create()
end)

function Tank:ctor(bitmask)
    cclog("tank init")
    --标记当前方向 1-up 2-right 3-down 4-left
    self.direction = 1
    self.isMoving = false
    self.currentMoveAction = nil
    self.fireCalmDown = false
    self.categoryBitmask = bitmask

    --渲染移动动画
    local spriteFrame = cc.SpriteFrameCache:getInstance()
    spriteFrame:addSpriteFrames("tank.plist")
    self:setSpriteFrame("tank_stay_1.png")

    local animation = cc.Animation:create()
    for i = 1, 2 do
        local frameName = string.format("tank_move_%d.png", i)
        --cclog("frameName = %s", frameName)
        local tankFrame = spriteFrame:getSpriteFrame(frameName)
        animation:addSpriteFrame(tankFrame)
    end

    animation:setDelayPerUnit(0.15)
    animation:setRestoreOriginalFrame(true)
    local action = cc.Animate:create(animation)
    action:retain()
    self.moveAnimation = action

    --添加物理刚体
    local physicsBody = cc.PhysicsBody:createBox(self:getContentSize())
    physicsBody:setDynamic(false)
    physicsBody:setCategoryBitmask(self.categoryBitmask)
    if self.categoryBitmask == HERO then
        physicsBody:setContactTestBitmask(HERO_CONTACT)
    else
        physicsBody:setContactTestBitmask(ENEMY_CONTACT)
    end
    self:addComponent(physicsBody)

end

function Tank:setFireCalmDown()
    self.fireCalmDown = false
end

-- 获取当前方向
function Tank:getCurrentDirection()
    return self.direction
end

-- 设置当前方向
function Tank:setCurrentDirection(direction)
    self.direction = direction
end

--坦克移动函数
function Tank:tankMove(tag)
    local tankX, tankY = self:getPosition()

    local tankMoveToCurrentDirection = function(direction)
        local time, destination = common.initMoveTo(
                direction,
                0.005,
                tankX,
                tankY,
                self:getContentSize().width / 2)
        self.currentMoveAction = cc.MoveTo:create(time, destination)

        --self:startMoveAction

        self:runAction(cc.RepeatForever:create(self.moveAnimation:clone()))
        self:runAction(self.currentMoveAction)
        self.isMoving = true
    end

    local tankTurnToCurrentDirection = function(direction)
        local rotate
        for i = 1, 4 do
            if direction == i then
                rotate = cc.RotateTo:create(0, 90 * (i - 1))
                break
            end
        end
        self:runAction(rotate)
        self:setCurrentDirection(direction)
    end

    local direction = self:getCurrentDirection()
    if self.isMoving then
        if direction ~= tag then
            self:stopAction(self.currentMoveAction)
            tankTurnToCurrentDirection(tag)
            self:runAction(cc.RepeatForever:create(self.moveAnimation:clone()))
        end
    else
        if direction ~= tag then
            tankTurnToCurrentDirection(tag)
        end
        self:runAction(cc.RepeatForever:create(self.moveAnimation:clone()))
        tankMoveToCurrentDirection(tag)
    end

end

--坦克停止函数
function Tank:tankStopMove()
    self:stopAllActions()
    self.isMoving = false
end



--坦克开火
function Tank:tankFire()

    --待添加坦克判断，敌人子弹，英雄子弹

    if self.fireCalmDown == false then
        local tankX, tankY = self:getPosition()
        local bullet = Bullet:create(self.direction, tankX, tankY, true)
        self:getParent():addChild(bullet, 1, HERO_BULLET)
        bullet:fly()
        self.fireCalmDown = true
        return true
    else
        return false
    end
    return false
end
--local function tankStopRun(sprite)
--    sprite:stopAllActions()
--end

--坦克移动动画
--function Tank:startMoveAction()
--    --保存重复动画？
--    local spriteFrame = cc.SpriteFrameCache:getInstance()
--    spriteFrame:addSpriteFrames("tank.plist")
--
--    local animation = cc.Animation:create()
--    for i = 1, 2 do
--        local frameName = string.format("tank_move_%d.png", i)
--        --cclog("frameName = %s", frameName)
--        local tankFrame = spriteFrame:getSpriteFrame(frameName)
--        animation:addSpriteFrame(tankFrame)
--    end
--
--    animation:setDelayPerUnit(0.15)
--    animation:setRestoreOriginalFrame(true)
--    local action = cc.Animate:create(animation)
--    return action
--    --self:runAction(cc.RepeatForever:create(action))
--end

--退出时释放动画

return Tank