---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yangsen.
--- DateTime: 2018/8/8 18:46
---


local Tank = class("Tank", function(tankName)
    return cc.Sprite:create()
end)

function Tank:create(tankName)
    local sprite = Tank.new(tankName)
    return sprite
end

function Tank:ctor(tankName)
    cclog("tank init")
    --标记当前方向 1-up 2-right 3-down 4-left
    self.direction = 1
    self.isMoving = false
    self.currentMoveAction = nil

    local spriteFrame = cc.SpriteFrameCache:getInstance()
    spriteFrame:addSpriteFrames("tank.plist")
    self:setSpriteFrame(tankName)
end

-- 获取当前方向
function Tank:getCurrentDirection()
    return self.direction
end

-- 设置当前方向
function Tank:setCurrentDirection(direction)
    self.direction = direction
end

--坦克移动函数
function Tank:tankMove(tag)
    local tankX, tankY = self:getPosition()

    local tankMoveToCurrentDirection = function(direction)
        local time
        local destination
        if direction == 1 then
            time = 0.01 * (610 - tankY)
            destination = cc.p(tankX, 610)
        elseif direction == 2 then
            time = 0.01 * (770 - tankX)
            destination = cc.p(770, tankY)
        elseif direction == 3 then
            time = 0.01 * (tankY - 30)
            destination = cc.p(tankX, 30)
        elseif direction == 4 then
            time = 0.01 * (tankX - 190)
            destination = cc.p(190, tankY)
        end
        self.currentMoveAction = cc.MoveTo:create(time, destination)
        self:runAction(self.currentMoveAction)
        self.isMoving = true
    end

    local tankTurnToCurrentDirection = function(direction)
        local rotate
        for i = 1, 4 do
            if direction == i then
                rotate = cc.RotateTo:create(0, 90 * (i - 1))
                break
            end
        end
        self:runAction(rotate)
        self:setCurrentDirection(direction)
    end

    local direction = self:getCurrentDirection()
    if self.isMoving then
        if direction ~= tag then
            self:stopAction(self.currentMoveAction)
            tankTurnToCurrentDirection(tag)
        end
    else
        if direction ~= tag then
            tankTurnToCurrentDirection(tag)
        end
        tankMoveToCurrentDirection(tag)
    end

end

--坦克停止函数
function Tank:tankStopMove()
    self:stopAllActions()
    self.isMoving = false
end

return Tank